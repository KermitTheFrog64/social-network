{"version":3,"file":"static/js/752.48f406bb.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"contact\":\"ProfileInfo_contact__sQB8W\"};","import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport c from './ProfileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, SetEditMode] = useState(false);\n    let [status, SetStatus] = useState(props.status);\n\n    useEffect(() => {\n        SetStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode = () => {\n        SetEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        SetEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        SetStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange}\n                        value={status}></input>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { createField, Input, Textarea } from '../../common/FormsControllers/FormsControllers';\nimport c from './ProfileInfo.module.css';\nimport styles from '../../common/FormsControllers/FormsControllers.module.css'\n\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\n    return <form onSubmit={handleSubmit}>\n        <div>\n            <button>Save</button>\n        </div>\n        {error && \n        <div className={styles.formSummaryError}>\n            {error}\n        </div>\n        }\n        <div>\n            <b>Full name:</b> { createField(\"Full name\", \"fullName\", [], Input) }\n        </div>\n        <div>\n            <b>Looking for a job:</b> { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"}) }\n        </div>\n            <div>\n                <b>My professional skills:</b> { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea) }\n            </div>\n        <div>\n            <b>About me:</b> { createField(\"About me\", \"aboutMe\", [], Textarea) }\n        </div>\n        <div>\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={c.contact} >\n                    <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\n                </div>\n            })}\n        </div>\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({ form: 'edit-profile', enableReinitialize: true, destroyOnUnmount: false })(ProfileDataForm);\n\n\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\nimport Preloader from '../../common/Preloader/Preloader';\nimport c from './ProfileInfo.module.css';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\nimport userPhoto from '../../../assets/images/user.jpg';\nimport ProfileDataForm from './ProfileDataForm';\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, SetEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile (formData).then(() => {\n            SetEditMode(false);\n        });\n    }\n\n    return (\n        <div>\n            <div className={c.descriptionBlock}>\n\n                <img src={profile.photos.large || userPhoto} className={c.mainPhoto} />\n\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} /> }\n\n                { editMode \n                ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile} /> \n                : <ProfileData goToEditMode={() => {SetEditMode(true)}} isOwner={isOwner} profile={profile} /> }\n                \n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n}\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n    return <div>\n        {isOwner &&\n            <div>\n                <button onClick={goToEditMode} >Edit</button>\n            </div>\n        }\n        <div>\n            <b>Full name:</b> {profile.fullName}\n        </div>\n        <div>\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {\n            profile.lookingForAJob &&\n            <div>\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\n            </div>\n        }\n        <div>\n            <b>About me:</b> {profile.aboutMe}\n        </div>\n        <div>\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n        </div>\n    </div>\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={c.contact} ><b>{contactTitle}:</b> {contactValue}</div>\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from 'react';\nimport c from './Post.module.css';\n\nconst Post = (props) => {\n    return (\n    <div className={c.item}>\n        <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSe3Q_jHZOfFLWc5SzH7A-xxaPcOOyDj-X8zQ&usqp=CAU' />\n        {props.message}\n        <div><span>{props.numberOfLikes} likes</span></div>\n    </div>\n    )\n}\n\nexport default Post;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControllers/FormsControllers';\nimport c from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"Post\"} name={\"post\"} component={Textarea} \n                validate={[required, maxLength10]} />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm)\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = [...props.posts]\n    .reverse()\n    .map(p => <Post key={p.id} message={p.message} numberOfLikes={p.numberOfLikes} />);\n\n    const onSubmit = (formData) => {\n        props.addPost(formData.post)\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <PostReduxForm onSubmit={onSubmit} />\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n)\n\nexport default MyPosts;\n\n/* const MyPosts = (props) => {\n\n    let postsElements = props.posts.map(p => <Post message={p.message} numberOfLikes={p.numberOfLikes} />);\n\n    let onAddPost = () => {\n        props.addPost();\n    }\n\n    let onPostChange = (e) => {\n        let text = e.target.value;\n        props.updateNewPostText(text)\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea onChange={onPostChange} value = {props.newPostText}/>\n                </div>\n                <div>\n                    <button onClick={onAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n} */","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (post) => {\n            dispatch(addPostActionCreator(post));\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n    return (\n        <div>\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n    useLocation,\n    useNavigate,\n    useParams,\n} from \"react-router-dom\";\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\"\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component{\n\n    refreshProfile() {\n        let userId = this.props.router.params.userId;\n        if(!userId){\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.router.params.userId != prevProps.router.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                isOwner={!this.props.router.params.userId}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                savePhoto={this.props.savePhoto}\n                saveProfile={this.props.saveProfile} />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nlet mapStateToPropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","useState","editMode","SetEditMode","status","SetStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","enableReinitialize","destroyOnUnmount","handleSubmit","profile","error","onSubmit","className","styles","createField","Input","type","Textarea","Object","keys","contacts","map","key","c","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","message","numberOfLikes","maxLength10","maxLengthCreator","PostReduxForm","Field","placeholder","name","component","validate","required","React","postsElements","posts","reverse","p","id","addPost","post","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsRedirect","RedirectComponent","to"],"sourceRoot":""}