{"version":3,"file":"static/js/672.b4e9cc42.chunk.js","mappings":"sMACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAmP,wB,mBCanP,EAVmB,SAACA,GAChB,IAAIC,EAAO,WAAaD,EAAME,GAC9B,OACI,iBAAKC,UAAWC,EAAW,IAAMA,EAAjC,WACI,gBAAKD,UAAWC,EAAUC,IAAI,+FAC9B,SAAC,KAAD,CAASC,GAAIL,EAAb,SAAoBD,EAAMO,SAGrC,ECAD,EATgB,SAACP,GACb,OACI,iBAAKG,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAUC,IAAI,8FAC7BL,EAAMQ,UAGlB,E,gDCwCKC,GAAcC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,WAAjBD,EAdL,SAACZ,GACjB,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,UAAWV,KAAM,UAAWW,UAAWC,EAAAA,GACvDC,SAAU,CAACC,EAAAA,EAAUZ,QAE7B,0BACI,yCAIf,IAiCD,EA7BgB,SAACT,GAEb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAML,GAAIyB,EAAEzB,IAApC,IAErC0B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAxB,IAM3C,OAAKR,EAAM+B,QAGP,iBAAK5B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,KAEL,iBAAKrB,UAAWC,EAAhB,WACI,yBACKwB,KAEL,SAACjB,EAAD,CAAkBG,SAfb,SAACkB,GACdhC,EAAMiC,YAAYD,EAASxB,QAC9B,WAEyB,SAAC,KAAD,CAAUF,GAAI,UAe3C,ECzED,GAAe4B,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE1B,IAEwB,SAACa,GACtB,MAAO,CACHH,YAAa,SAACzB,GACV4B,GAASC,EAAAA,EAAAA,GAAyB7B,GACrC,EAER,IAIG8B,EAAAA,EAFJ,CAGEC,E,mJCrBEC,EAA0B,SAAClB,GAAD,MAAY,CACtCS,OAAQT,EAAMmB,KAAKV,OADO,EAIjBO,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK5C,MAAM+B,QACT,SAACW,GAAD,UAAeE,KAAK5C,SADI,SAAC,KAAD,CAAUM,GAAI,UAEhD,KALsC,GACXuC,EAAAA,WAShC,OAFqCV,EAAAA,EAAAA,IAAQK,EAARL,CAAiCQ,EAGzE,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/WithAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"dialog\":\"Dialogs_dialog__htSTl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"avatar\":\"Dialogs_avatar__J0Uvr\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport c from './../Dialogs.module.css';\n\nconst DialogItem = (props) => {\n    let path = \"/dialog/\" + props.id;\n    return (\n        <div className={c.dialog + ' ' + c.active}>\n            <img className={c.avatar} src='https://s1.stc.all.kpcdn.net/afisha/msk/wp-content/uploads/sites/5/2021/12/avatar-2-1.jpg' />\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport c from './../Dialogs.module.css';\n\nconst Message = (props) => {\n    return (\n        <div className={c.message}>\n            <img className={c.avatar} src='https://s1.stc.all.kpcdn.net/afisha/msk/wp-content/uploads/sites/5/2021/12/avatar-2-1.jpg' />\n            {props.message}\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Navigate } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { Textarea } from '../common/FormsControllers/FormsControllers';\n\n/* const Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\n\n    let onSendMessage = () => {\n        props.sendMessage()\n    }\n\n    let onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateNewMessageText(text)\n    }\n\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <div>\n                    <div>\n                        <textarea onChange={onMessageChange} value={state.newMessageText}></textarea>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n} */\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst MessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"Message\"} name={\"message\"} component={Textarea}\n                    validate={[required, maxLength50]} />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MessageReduxForm = reduxForm({form: 'message'})(MessageForm)\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\n\n    const onSubmit = (formData) => {\n        props.sendMessage(formData.message)\n    }\n\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <MessageReduxForm onSubmit={onSubmit} />\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from './Dialogs';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (message) => {\n            dispatch(sendMessageActionCreator(message));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nlet mapStateToPropsRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}"],"names":["props","path","id","className","c","src","to","name","message","maxLength50","maxLengthCreator","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","formData","sendMessage","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}