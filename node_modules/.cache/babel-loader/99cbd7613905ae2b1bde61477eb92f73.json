{"ast":null,"code":"import React from'react';import c from'./Dialogs.module.css';import DialogItem from'./DialogItem/DialogItem';import Message from'./Message/Message';import{Navigate}from'react-router-dom';import{Field,reduxForm}from'redux-form';import{maxLengthCreator,required}from'../../utils/validators/validators';import{Textarea}from'../common/FormsControllers/FormsControllers';/* const Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\n\n    let onSendMessage = () => {\n        props.sendMessage()\n    }\n\n    let onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateNewMessageText(text)\n    }\n\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <div>\n                    <div>\n                        <textarea onChange={onMessageChange} value={state.newMessageText}></textarea>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n} */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength50=maxLengthCreator(50);var MessageForm=function MessageForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Message\",name:\"message\",component:Textarea,validate:[required,maxLength50]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})})]});};var MessageReduxForm=reduxForm({form:'message'})(MessageForm);var Dialogs=function Dialogs(props){var state=props.dialogsPage;var dialogsElements=state.dialogs.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id});});var messagesElements=state.messages.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m.message});});var onSubmit=function onSubmit(formData){props.sendMessage(formData.message);};if(!props.isAuth)return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});return/*#__PURE__*/_jsxs(\"div\",{className:c.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:c.dialogsItems,children:dialogsElements}),/*#__PURE__*/_jsxs(\"div\",{className:c.messages,children:[/*#__PURE__*/_jsx(\"div\",{children:messagesElements}),/*#__PURE__*/_jsx(MessageReduxForm,{onSubmit:onSubmit})]})]});};export default Dialogs;","map":{"version":3,"names":["React","c","DialogItem","Message","Navigate","Field","reduxForm","maxLengthCreator","required","Textarea","maxLength50","MessageForm","props","handleSubmit","MessageReduxForm","form","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","onSubmit","formData","sendMessage","isAuth","dialogsItems"],"sources":["/home/natalie/ReactProjects/01/my-app/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\nimport c from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Navigate } from 'react-router-dom';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\nimport { Textarea } from '../common/FormsControllers/FormsControllers';\n\n/* const Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\n\n    let onSendMessage = () => {\n        props.sendMessage()\n    }\n\n    let onMessageChange = (e) => {\n        let text = e.target.value;\n        props.updateNewMessageText(text)\n    }\n\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <div>\n                    <div>\n                        <textarea onChange={onMessageChange} value={state.newMessageText}></textarea>\n                    </div>\n                    <div>\n                        <button onClick={onSendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n} */\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst MessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"Message\"} name={\"message\"} component={Textarea}\n                    validate={[required, maxLength50]} />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MessageReduxForm = reduxForm({form: 'message'})(MessageForm)\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} />);\n\n    let messagesElements = state.messages.map(m => <Message message={m.message} />);\n\n    const onSubmit = (formData) => {\n        props.sendMessage(formData.message)\n    }\n\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\n\n    return (\n        <div className={c.dialogs}>\n            <div className={c.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={c.messages}>\n                <div>\n                    {messagesElements}\n                </div>\n                <MessageReduxForm onSubmit={onSubmit} />\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,EAAP,KAAc,sBAAd,CACA,MAAOC,WAAP,KAAuB,yBAAvB,CACA,MAAOC,QAAP,KAAoB,mBAApB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,mCAA3C,CACA,OAASC,QAAT,KAAyB,6CAAzB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I,wFAEA,GAAMC,YAAW,CAAGH,gBAAgB,CAAC,EAAD,CAApC,CAEA,GAAMI,YAAW,CAAG,QAAdA,YAAc,CAACC,KAAD,CAAW,CAC3B,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,SAApB,CAA+B,IAAI,CAAE,SAArC,CAAgD,SAAS,CAAEJ,QAA3D,CACI,QAAQ,CAAE,CAACD,QAAD,CAAWE,WAAX,CADd,EADJ,EADJ,cAKI,kCACI,gCADJ,EALJ,GADJ,CAWH,CAZD,CAcA,GAAMI,iBAAgB,CAAGR,SAAS,CAAC,CAACS,IAAI,CAAE,SAAP,CAAD,CAAT,CAA6BJ,WAA7B,CAAzB,CAEA,GAAMK,QAAO,CAAG,QAAVA,QAAU,CAACJ,KAAD,CAAW,CAEvB,GAAIK,MAAK,CAAGL,KAAK,CAACM,WAAlB,CAEA,GAAIC,gBAAe,CAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAA0B,EAAE,CAAED,CAAC,CAACE,EAAhC,EAAJ,EAAnB,CAAtB,CAEA,GAAIC,iBAAgB,CAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAmB,SAAAM,CAAC,qBAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAAJ,EAApB,CAAvB,CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,QAAD,CAAc,CAC3BlB,KAAK,CAACmB,WAAN,CAAkBD,QAAQ,CAACF,OAA3B,EACH,CAFD,CAIA,GAAI,CAAChB,KAAK,CAACoB,MAAX,CAAmB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAAP,CAEnB,mBACI,aAAK,SAAS,CAAE/B,CAAC,CAACmB,OAAlB,wBACI,YAAK,SAAS,CAAEnB,CAAC,CAACgC,YAAlB,UACKd,eADL,EADJ,cAII,aAAK,SAAS,CAAElB,CAAC,CAACyB,QAAlB,wBACI,qBACKD,gBADL,EADJ,cAII,KAAC,gBAAD,EAAkB,QAAQ,CAAEI,QAA5B,EAJJ,GAJJ,GADJ,CAaH,CA3BD,CA6BA,cAAeb,QAAf"},"metadata":{},"sourceType":"module"}