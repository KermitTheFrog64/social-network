{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { authAPI, securityAPI } from \"../api/api\";\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\nconst GET_CAPTCHA_URL_SUCCESS = \"auth/GET-CAPTCHA-URL-SUCCESS\";\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  captchaUrl: null\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    userId,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const setCaptchaUrlSuccess = captchaUrl => ({\n  type: GET_CAPTCHA_URL_SUCCESS,\n  payload: {\n    captchaUrl\n  }\n});\nexport const getAuthUserData = () => async dispatch => {\n  let response = await authAPI.getMe();\n\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      email,\n      login\n    } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthUserData());\n  } else {\n    if (response.data.resultCode === 10) {\n      dispatch(getCaptchaURL());\n    }\n\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n    dispatch(stopSubmit(\"login\", {\n      _error: message\n    }));\n  }\n};\nexport const getCaptchaURL = () => async dispatch => {\n  let response = await securityAPI.getCaptchaURL();\n  const captchaUrl = response.data.Url();\n  dispatch(setCaptchaUrlSuccess(captchaUrl));\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["stopSubmit","authAPI","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","captchaUrl","authReducer","state","action","type","payload","setAuthUserData","setCaptchaUrlSuccess","getAuthUserData","dispatch","response","getMe","data","resultCode","id","password","rememberMe","getCaptchaURL","message","messages","length","_error","Url","logout"],"sources":["/home/natalie/ReactProjects/01/my-app/src/redux/auth-reducer.js"],"sourcesContent":["import { stopSubmit } from \"redux-form\";\nimport { authAPI, securityAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'auth/SET-USER-DATA';\nconst GET_CAPTCHA_URL_SUCCESS = \"auth/GET-CAPTCHA-URL-SUCCESS\"\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: { userId, email, login, isAuth }\n})\n\nexport const setCaptchaUrlSuccess = (captchaUrl) => ({\n    type: GET_CAPTCHA_URL_SUCCESS,\n    payload: { captchaUrl }\n})\n\n\nexport const getAuthUserData = () => async (dispatch) => {\n\n    let response = await authAPI.getMe();\n\n    if (response.data.resultCode === 0) {\n        let { id, email, login } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n\n    let response = await authAPI.login(email, password, rememberMe);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    }\n    else {\n        if (response.data.resultCode === 10) {\n            dispatch(getCaptchaURL())\n        }\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", { _error: message }));\n    }\n}\n\nexport const getCaptchaURL = () => async (dispatch) => {\n\n    let response = await securityAPI.getCaptchaURL();\n\n    const captchaUrl = response.data.Url();\n\n    dispatch(setCaptchaUrlSuccess(captchaUrl));\n    \n}\n\nexport const logout = () => async (dispatch) => {\n\n    let response = await authAPI.logout();\n    \n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}