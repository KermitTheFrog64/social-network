{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/01/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { getUserProfile } from \"../../redux/profile-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getUserProfile(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet AuthRedirectComponent = props => {\n  if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(ProfileContainer, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_c = AuthRedirectComponent;\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  isAuth: state.auth.isAuth\n});\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nexport default connect(mapStateToProps, {\n  getUserProfile\n})(withRouter(AuthRedirectComponent()));\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"names":["React","connect","Profile","Navigate","useLocation","useNavigate","useParams","getUserProfile","ProfileContainer","Component","componentDidMount","userId","props","router","params","render","profile","AuthRedirectComponent","isAuth","mapStateToProps","state","profilePage","auth","withRouter","ComponentWithRouterProp","location","navigate"],"sources":["/home/natalie/ReactProjects/01/my-app/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n    Navigate,\n    useLocation,\n    useNavigate,\n    useParams,\n} from \"react-router-dom\";\nimport {getUserProfile} from \"../../redux/profile-reducer\"\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if(!userId){\n            userId = 2;\n        }\n        this.props.getUserProfile(userId);\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props} profile={this.props.profile}/>\n        )\n    }\n}\n\nlet AuthRedirectComponent = (props) => {\n    if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\n    return <ProfileContainer {...props} />\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    isAuth: state.auth.isAuth\n})\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\nexport default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent()));"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,kBALP;AAMA,SAAQC,cAAR,QAA6B,6BAA7B;;;AAEA,MAAMC,gBAAN,SAA+BR,KAAK,CAACS,SAArC,CAA8C;EAE1CC,iBAAiB,GAAG;IAChB,IAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBH,MAAtC;;IACA,IAAG,CAACA,MAAJ,EAAW;MACPA,MAAM,GAAG,CAAT;IACH;;IACD,KAAKC,KAAL,CAAWL,cAAX,CAA0BI,MAA1B;EACH;;EAEDI,MAAM,GAAG;IAEL,oBACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;MAAyB,OAAO,EAAE,KAAKA,KAAL,CAAWI;IAA7C;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;AAfyC;;AAkB9C,IAAIC,qBAAqB,GAAIL,KAAD,IAAW;EACnC,IAAI,CAAC,KAAKA,KAAL,CAAWM,MAAhB,EAAwB,oBAAO,QAAC,QAAD;IAAU,EAAE,EAAE;EAAd;IAAA;IAAA;IAAA;EAAA,QAAP;EACxB,oBAAO,QAAC,gBAAD,OAAsBN;EAAtB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAHD;;KAAIK,qB;;AAKJ,IAAIE,eAAe,GAAIC,KAAD,KAAY;EAC9BJ,OAAO,EAAEI,KAAK,CAACC,WAAN,CAAkBL,OADG;EAE9BE,MAAM,EAAEE,KAAK,CAACE,IAAN,CAAWJ;AAFW,CAAZ,CAAtB;;AAKA,SAASK,UAAT,CAAoBd,SAApB,EAA+B;EAAA;;EAC3B,SAASe,uBAAT,CAAiCZ,KAAjC,EAAwC;IAAA;;IACpC,IAAIa,QAAQ,GAAGrB,WAAW,EAA1B;IACA,IAAIsB,QAAQ,GAAGrB,WAAW,EAA1B;IACA,IAAIS,MAAM,GAAGR,SAAS,EAAtB;IACA,oBACI,QAAC,SAAD,OACQM,KADR;MAEI,MAAM,EAAE;QAAEa,QAAF;QAAYC,QAAZ;QAAsBZ;MAAtB;IAFZ;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;EAX0B,GAClBU,uBADkB;IAAA,QAERpB,WAFQ,EAGRC,WAHQ,EAIVC,SAJU;EAAA;;EAa3B,OAAOkB,uBAAP;AACH;;AAED,eAAevB,OAAO,CAACkB,eAAD,EAAkB;EAACZ;AAAD,CAAlB,CAAP,CAA2CgB,UAAU,CAACN,qBAAqB,EAAtB,CAArD,CAAf"},"metadata":{},"sourceType":"module"}