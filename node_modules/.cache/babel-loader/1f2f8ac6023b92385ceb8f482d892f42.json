{"ast":null,"code":"import { userAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helper\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, \"id\", {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return { ...state,\n        followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (currentPage, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  let data = await userAPI.getUsers(currentPage, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\nexport const getUsersByPage = (pageNumber, pageSize) => async dispatch => {\n  dispatch(setCurrentPage(pageNumber));\n  dispatch(toggleIsFetching(true));\n  let data = await userAPI.getUsers(pageNumber, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n};\n\nconst followUnfolloFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => async dispatch => {\n  followUnfolloFlow(dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess);\n};\nexport const unfollow = userId => async dispatch => {\n  followUnfolloFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess);\n};\nexport default usersReducer;","map":{"version":3,"names":["userAPI","updateObjectInArray","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","filter","id","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","requestUsers","dispatch","data","getUsers","items","totalCount","getUsersByPage","pageNumber","followUnfolloFlow","apiMethod","actionCreator","resultCode","follow","followUser","bind","unfollow","unfollowUser"],"sources":["/home/natalie/ReactProjects/01/my-app/src/redux/users-reducer.js"],"sourcesContent":["import { userAPI } from \"../api/api\";\nimport { updateObjectInArray } from \"../utils/object-helper\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n\n}\n\nconst usersReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            }\n        case SET_USERS:\n            return { ...state, users: action.users }\n        case SET_CURRENT_PAGE:\n            return { ...state, currentPage: action.currentPage }\n        case SET_TOTAL_USERS_COUNT:\n            return { ...state, totalUsersCount: action.count }\n        case TOGGLE_IS_FETCHING:\n            return { ...state, isFetching: action.isFetching }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return { ...state, \n                followingInProgress: action.isFetching \n                ? [...state.followingInProgress, action.userId] \n                : state.followingInProgress.filter(id => id != action.userId)}\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\n\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\n\nexport const setUsers = (users) => ({type: SET_USERS, users})\n\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\n\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\n\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\n\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\n\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\n\n    dispatch(toggleIsFetching(true));\n\n    let data = await userAPI.getUsers(currentPage, pageSize);\n\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n\n}\n\nexport const getUsersByPage = (pageNumber, pageSize) => async (dispatch) => {\n\n    dispatch(setCurrentPage(pageNumber));\n\n    dispatch(toggleIsFetching(true));\n\n    let data = await userAPI.getUsers(pageNumber, pageSize);\n\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n\n}\n\nconst followUnfolloFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n\n    dispatch(toggleFollowingProgress(true, userId));\n\n    let data = await apiMethod(userId);\n\n    if (data.resultCode == 0) {\n        dispatch(actionCreator(userId))\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => async (dispatch) => {\n\n    followUnfolloFlow (dispatch, userId, userAPI.followUser.bind(userAPI), followSuccess);\n\n}\n\nexport const unfollow = (userId) => async (dispatch) => {\n\n    followUnfolloFlow (dispatch, userId, userAPI.unfollowUser.bind(userAPI), unfollowSuccess);\n\n}\n\nexport default usersReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}