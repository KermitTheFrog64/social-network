{"ast":null,"code":"var _jsxFileName = \"/home/natalie/ReactProjects/01/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { getUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n\n    if (!userId) {\n      userId = 2;\n    }\n\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n      profile: this.props.profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer); //let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n} //export default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent));","map":{"version":3,"names":["React","connect","Profile","Navigate","useLocation","useNavigate","useParams","getUserProfile","getStatus","updateStatus","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","router","params","render","profile","mapStateToProps","state","profilePage","status","withRouter","ComponentWithRouterProp","location","navigate"],"sources":["/home/natalie/ReactProjects/01/my-app/src/components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport {\n    Navigate,\n    useLocation,\n    useNavigate,\n    useParams,\n} from \"react-router-dom\";\nimport {getUserProfile, getStatus, updateStatus} from \"../../redux/profile-reducer\"\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if(!userId){\n            userId = 2;\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props} profile={this.props.profile}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status\n})\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp;\n}\n\n//export default connect(mapStateToProps, {getUserProfile})(withRouter(AuthRedirectComponent));"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACIC,QADJ,EAEIC,WAFJ,EAGIC,WAHJ,EAIIC,SAJJ,QAKO,kBALP;AAMA,SAAQC,cAAR,EAAwBC,SAAxB,EAAmCC,YAAnC,QAAsD,6BAAtD;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;;AAEA,MAAMC,gBAAN,SAA+BZ,KAAK,CAACa,SAArC,CAA8C;EAE1CC,iBAAiB,GAAG;IAChB,IAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyBH,MAAtC;;IACA,IAAG,CAACA,MAAJ,EAAW;MACPA,MAAM,GAAG,CAAT;IACH;;IACD,KAAKC,KAAL,CAAWT,cAAX,CAA0BQ,MAA1B;IACA,KAAKC,KAAL,CAAWR,SAAX,CAAqBO,MAArB;EACH;;EAEDI,MAAM,GAAG;IAEL,oBACI,QAAC,OAAD,OAAa,KAAKH,KAAlB;MAAyB,OAAO,EAAE,KAAKA,KAAL,CAAWI;IAA7C;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;AAhByC;;AAmB9C,IAAIC,eAAe,GAAIC,KAAD,KAAY;EAC9BF,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OADG;EAE9BI,MAAM,EAAEF,KAAK,CAACC,WAAN,CAAkBC;AAFI,CAAZ,CAAtB;;AAKA,eAAeb,OAAO,CAClBV,OAAO,CAACoB,eAAD,EAAkB;EAACd,cAAD;EAAiBC,SAAjB;EAA4BC;AAA5B,CAAlB,CADW,EAElBgB,UAFkB,EAGlBf,gBAHkB,CAAP,CAIbE,gBAJa,CAAf,C,CAMA;;AAEA,SAASa,UAAT,CAAoBZ,SAApB,EAA+B;EAAA;;EAC3B,SAASa,uBAAT,CAAiCV,KAAjC,EAAwC;IAAA;;IACpC,IAAIW,QAAQ,GAAGvB,WAAW,EAA1B;IACA,IAAIwB,QAAQ,GAAGvB,WAAW,EAA1B;IACA,IAAIa,MAAM,GAAGZ,SAAS,EAAtB;IACA,oBACI,QAAC,SAAD,OACQU,KADR;MAEI,MAAM,EAAE;QAAEW,QAAF;QAAYC,QAAZ;QAAsBV;MAAtB;IAFZ;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;EAX0B,GAClBQ,uBADkB;IAAA,QAERtB,WAFQ,EAGRC,WAHQ,EAIVC,SAJU;EAAA;;EAa3B,OAAOoB,uBAAP;AACH,C,CAED"},"metadata":{},"sourceType":"module"}