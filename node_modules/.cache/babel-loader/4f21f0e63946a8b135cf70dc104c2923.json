{"ast":null,"code":"const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: 'Hello, I\\'m Natalie',\n        numberOfLikes: '15'\n      }, {\n        id: 2,\n        message: 'Hi! How are you?',\n        numberOfLikes: '35'\n      }],\n      newPostText: 'newPost'\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: 'Natalie'\n      }, {\n        id: 2,\n        name: 'Dora'\n      }, {\n        id: 3,\n        name: 'Knara'\n      }, {\n        id: 4,\n        name: 'Nastya'\n      }, {\n        id: 5,\n        name: 'Tanya'\n      }, {\n        id: 6,\n        name: 'Ola'\n      }],\n      messages: [{\n        id: 1,\n        message: 'Hey!'\n      }, {\n        id: 2,\n        message: 'Hello!'\n      }, {\n        id: 3,\n        message: 'Hi!'\n      }, {\n        id: 4,\n        message: 'How do you do?'\n      }, {\n        id: 5,\n        message: 'What\\'s up?'\n      }],\n      newMessageText: 'Hello! Type your message'\n    },\n    sidebar: {}\n  },\n\n  _callSubscriber() {\n    console.log('State was changed');\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  dispatch(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 3,\n        message: this._state.profilePage.newPostText,\n        numberOfLikes: '12'\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n    } else if (action.type === SEND_MESSAGE) {\n      let newMessage = {\n        id: 6,\n        message: this._state.dialogsPage.newMessageText\n      };\n\n      this._state.dialogsPage.messages.push(newMessage);\n\n      this._state.dialogsPage.newMessageText = '';\n\n      this._callSubscriber(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n      this._state.dialogsPage.newMessageText = action.newText;\n\n      this._callSubscriber(this._state);\n    }\n  }\n\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport const sendMessageActionCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageTextActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_TEXT,\n  newText: text\n});\nexport default store;\nwindow.store = store;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","SEND_MESSAGE","UPDATE_NEW_MESSAGE_TEXT","store","_state","profilePage","posts","id","message","numberOfLikes","newPostText","dialogsPage","dialogs","name","messages","newMessageText","sidebar","_callSubscriber","console","log","getState","subscribe","observer","dispatch","action","type","newPost","push","newText","newMessage","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageActionCreator","updateNewMessageTextActionCreator","window"],"sources":["/home/natalie/ReactProjects/01/my-app/src/redux/state.js"],"sourcesContent":["const ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT'\n\nlet store = {\n    _state: {\n        profilePage: {\n            posts: [\n                { id: 1, message: 'Hello, I\\'m Natalie', numberOfLikes: '15' },\n                { id: 2, message: 'Hi! How are you?', numberOfLikes: '35' },\n            ],\n            newPostText: 'newPost',\n        },\n        dialogsPage: {\n            dialogs: [\n                { id: 1, name: 'Natalie' },\n                { id: 2, name: 'Dora' },\n                { id: 3, name: 'Knara' },\n                { id: 4, name: 'Nastya' },\n                { id: 5, name: 'Tanya' },\n                { id: 6, name: 'Ola' }\n            ],\n            messages: [\n                { id: 1, message: 'Hey!' },\n                { id: 2, message: 'Hello!' },\n                { id: 3, message: 'Hi!' },\n                { id: 4, message: 'How do you do?' },\n                { id: 5, message: 'What\\'s up?' },\n            ],\n            newMessageText: 'Hello! Type your message',\n        },\n        sidebar: {}\n    },\n    _callSubscriber () {\n        console.log('State was changed');\n    },\n\n    getState () {\n        return  this._state\n    },\n    subscribe (observer) {\n        this._callSubscriber = observer;\n    },\n\n    dispatch(action) {\n        if (action.type === ADD_POST) {\n            let newPost = {\n                id: 3,\n                message: this._state.profilePage.newPostText,\n                numberOfLikes: '12'\n            };\n            this._state.profilePage.posts.push(newPost);\n            this._state.profilePage.newPostText = '';\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === UPDATE_NEW_POST_TEXT) {\n            this._state.profilePage.newPostText = action.newText;\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === SEND_MESSAGE) {\n            let newMessage = {\n                id: 6,\n                message: this._state.dialogsPage.newMessageText,\n            };\n            this._state.dialogsPage.messages.push(newMessage);\n            this._state.dialogsPage.newMessageText = '';\n            this._callSubscriber(this._state);\n        }\n        else if (action.type === UPDATE_NEW_MESSAGE_TEXT) {\n            this._state.dialogsPage.newMessageText = action.newText;\n            this._callSubscriber(this._state);\n        }\n    }\n    \n}\n\nexport const addPostActionCreator = () => ({type: ADD_POST})\n\nexport const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text})\n\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE})\n\nexport const updateNewMessageTextActionCreator = (text) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText: text})\n\nexport default store;\n\nwindow.store = store;"],"mappings":"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"},"metadata":{},"sourceType":"module"}