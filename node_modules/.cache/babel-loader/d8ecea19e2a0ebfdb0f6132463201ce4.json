{"ast":null,"code":"import { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hello, I\\'m Natalie',\n    numberOfLikes: '15'\n  }, {\n    id: 2,\n    message: 'Hi! How are you?',\n    numberOfLikes: '35'\n  }],\n  profile: null,\n  status: \"\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      let body = action.post;\n      return { ...state,\n        newPostText: '',\n        posts: [...state.posts, {\n          id: 3,\n          message: body,\n          numberOfLikes: '12'\n        }]\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = post => ({\n  type: ADD_POST,\n  post\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfile = userId => {\n  return dispatch => {\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(data => {\n    dispatch(setStatus(data));\n  });\n};\nexport const updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(data => {\n    if (data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","numberOfLikes","profile","status","profileReducer","state","action","type","body","post","newPostText","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","data","getStatus","updateStatus","resultCode"],"sources":["/home/natalie/ReactProjects/01/my-app/src/redux/profile-reducer.js"],"sourcesContent":["import { profileAPI } from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hello, I\\'m Natalie', numberOfLikes: '15' },\n        { id: 2, message: 'Hi! How are you?', numberOfLikes: '35' },\n    ],\n    profile: null,\n    status: \"\"\n}\n\nconst profileReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case ADD_POST:\n            let body = action.post;\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, { id: 3, message: body, numberOfLikes: '12' }]\n            }\n\n        case SET_USER_PROFILE:\n            return { ...state, profile: action.profile }\n\n        case SET_STATUS:\n            return { ...state, status: action.status }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPostActionCreator = (post) => ({type: ADD_POST, post})\n\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\n\nexport const setStatus = (status) => ({type: SET_STATUS, status})\n\nexport const getUserProfile = (userId) => {\n    return (dispatch) => {\n        profileAPI.getProfile(userId).\n            then(data => {\n                dispatch(setUserProfile(data));\n            })\n    }\n}\n\nexport const getStatus = (userId) => (dispatch) => {\n    profileAPI.getStatus(userId).\n        then(data => {\n            dispatch(setStatus(data));\n        })\n}\n\nexport const updateStatus = (status) => (dispatch) => {\n    profileAPI.updateStatus(status).\n        then(data => {\n            if (data.resultCode === 0) {\n                dispatch(setStatus(status));\n            }\n        })\n}\n\nexport default profileReducer;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,CACH;IAAEC,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,qBAAlB;IAAyCC,aAAa,EAAE;EAAxD,CADG,EAEH;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,kBAAlB;IAAsCC,aAAa,EAAE;EAArD,CAFG,CADQ;EAKfC,OAAO,EAAE,IALM;EAMfC,MAAM,EAAE;AANO,CAAnB;;AASA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EAErD,QAAQA,MAAM,CAACC,IAAf;IAEI,KAAKb,QAAL;MACI,IAAIc,IAAI,GAAGF,MAAM,CAACG,IAAlB;MACA,OAAO,EACH,GAAGJ,KADA;QAEHK,WAAW,EAAE,EAFV;QAGHZ,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiB;UAAEC,EAAE,EAAE,CAAN;UAASC,OAAO,EAAEQ,IAAlB;UAAwBP,aAAa,EAAE;QAAvC,CAAjB;MAHJ,CAAP;;IAMJ,KAAKN,gBAAL;MACI,OAAO,EAAE,GAAGU,KAAL;QAAYH,OAAO,EAAEI,MAAM,CAACJ;MAA5B,CAAP;;IAEJ,KAAKN,UAAL;MACI,OAAO,EAAE,GAAGS,KAAL;QAAYF,MAAM,EAAEG,MAAM,CAACH;MAA3B,CAAP;;IAEJ;MACI,OAAOE,KAAP;EAjBR;AAmBH,CArBD;;AAuBA,OAAO,MAAMM,oBAAoB,GAAIF,IAAD,KAAW;EAACF,IAAI,EAAEb,QAAP;EAAiBe;AAAjB,CAAX,CAA7B;AAEP,OAAO,MAAMG,cAAc,GAAIV,OAAD,KAAc;EAACK,IAAI,EAAEZ,gBAAP;EAAyBO;AAAzB,CAAd,CAAvB;AAEP,OAAO,MAAMW,SAAS,GAAIV,MAAD,KAAa;EAACI,IAAI,EAAEX,UAAP;EAAmBO;AAAnB,CAAb,CAAlB;AAEP,OAAO,MAAMW,cAAc,GAAIC,MAAD,IAAY;EACtC,OAAQC,QAAD,IAAc;IACjBvB,UAAU,CAACwB,UAAX,CAAsBF,MAAtB,EACIG,IADJ,CACSC,IAAI,IAAI;MACTH,QAAQ,CAACJ,cAAc,CAACO,IAAD,CAAf,CAAR;IACH,CAHL;EAIH,CALD;AAMH,CAPM;AASP,OAAO,MAAMC,SAAS,GAAIL,MAAD,IAAaC,QAAD,IAAc;EAC/CvB,UAAU,CAAC2B,SAAX,CAAqBL,MAArB,EACIG,IADJ,CACSC,IAAI,IAAI;IACTH,QAAQ,CAACH,SAAS,CAACM,IAAD,CAAV,CAAR;EACH,CAHL;AAIH,CALM;AAOP,OAAO,MAAME,YAAY,GAAIlB,MAAD,IAAaa,QAAD,IAAc;EAClDvB,UAAU,CAAC4B,YAAX,CAAwBlB,MAAxB,EACIe,IADJ,CACSC,IAAI,IAAI;IACT,IAAIA,IAAI,CAACG,UAAL,KAAoB,CAAxB,EAA2B;MACvBN,QAAQ,CAACH,SAAS,CAACV,MAAD,CAAV,CAAR;IACH;EACJ,CALL;AAMH,CAPM;AASP,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}