{"ast":null,"code":"import _toConsumableArray from\"/home/natalie/ReactProjects/01/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React from'react';import{Field,reduxForm}from'redux-form';import{maxLengthCreator,required}from'../../../utils/validators/validators';import{Textarea}from'../../common/FormsControllers/FormsControllers';import c from'./MyPosts.module.css';import Post from'./Post/Post';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength10=maxLengthCreator(10);var PostForm=function PostForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{placeholder:\"Post\",name:\"post\",component:Textarea,validate:[required,maxLength10]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Add post\"})})]});};var PostReduxForm=reduxForm({form:'post'})(PostForm);var MyPosts=/*#__PURE__*/React.memo(function(props){var postsElements=_toConsumableArray(props.posts).reverse().map(function(p){return/*#__PURE__*/_jsx(Post,{message:p.message,numberOfLikes:p.numberOfLikes});});var onSubmit=function onSubmit(formData){props.addPost(formData.post);};return/*#__PURE__*/_jsxs(\"div\",{className:c.postsBlock,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My posts\"}),/*#__PURE__*/_jsx(PostReduxForm,{onSubmit:onSubmit}),/*#__PURE__*/_jsx(\"div\",{className:c.posts,children:postsElements})]});});export default MyPosts;/* const MyPosts = (props) => {\n\n    let postsElements = props.posts.map(p => <Post message={p.message} numberOfLikes={p.numberOfLikes} />);\n\n    let onAddPost = () => {\n        props.addPost();\n    }\n\n    let onPostChange = (e) => {\n        let text = e.target.value;\n        props.updateNewPostText(text)\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea onChange={onPostChange} value = {props.newPostText}/>\n                </div>\n                <div>\n                    <button onClick={onAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n} */","map":{"version":3,"names":["React","Field","reduxForm","maxLengthCreator","required","Textarea","c","Post","maxLength10","PostForm","props","handleSubmit","PostReduxForm","form","MyPosts","memo","postsElements","posts","reverse","map","p","message","numberOfLikes","onSubmit","formData","addPost","post","postsBlock"],"sources":["/home/natalie/ReactProjects/01/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\nimport { Textarea } from '../../common/FormsControllers/FormsControllers';\nimport c from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={\"Post\"} name={\"post\"} component={Textarea} \n                validate={[required, maxLength10]} />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst PostReduxForm = reduxForm({form: 'post'})(PostForm)\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = [...props.posts].reverse().map(p => <Post message={p.message} numberOfLikes={p.numberOfLikes} />);\n\n    const onSubmit = (formData) => {\n        props.addPost(formData.post)\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <PostReduxForm onSubmit={onSubmit} />\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n)\n\nexport default MyPosts;\n\n/* const MyPosts = (props) => {\n\n    let postsElements = props.posts.map(p => <Post message={p.message} numberOfLikes={p.numberOfLikes} />);\n\n    let onAddPost = () => {\n        props.addPost();\n    }\n\n    let onPostChange = (e) => {\n        let text = e.target.value;\n        props.updateNewPostText(text)\n    }\n\n    return (\n        <div className={c.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <div>\n                    <textarea onChange={onPostChange} value = {props.newPostText}/>\n                </div>\n                <div>\n                    <button onClick={onAddPost}>Add post</button>\n                </div>\n            </div>\n            <div className={c.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n} */"],"mappings":"mIAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,sCAA3C,CACA,OAASC,QAAT,KAAyB,gDAAzB,CACA,MAAOC,EAAP,KAAc,sBAAd,CACA,MAAOC,KAAP,KAAiB,aAAjB,C,wFAEA,GAAMC,YAAW,CAAGL,gBAAgB,CAAC,EAAD,CAApC,CAEA,GAAMM,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CACxB,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCACI,KAAC,KAAD,EAAO,WAAW,CAAE,MAApB,CAA4B,IAAI,CAAE,MAAlC,CAA0C,SAAS,CAAEN,QAArD,CACA,QAAQ,CAAE,CAACD,QAAD,CAAWI,WAAX,CADV,EADJ,EADJ,cAKI,kCACI,oCADJ,EALJ,GADJ,CAWH,CAZD,CAcA,GAAMI,cAAa,CAAGV,SAAS,CAAC,CAACW,IAAI,CAAE,MAAP,CAAD,CAAT,CAA0BJ,QAA1B,CAAtB,CAEA,GAAMK,QAAO,cAAGd,KAAK,CAACe,IAAN,CAAW,SAAAL,KAAK,CAAI,CAEhC,GAAIM,cAAa,CAAG,mBAAIN,KAAK,CAACO,KAAV,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,SAAAC,CAAC,qBAAI,KAAC,IAAD,EAAM,OAAO,CAAEA,CAAC,CAACC,OAAjB,CAA0B,aAAa,CAAED,CAAC,CAACE,aAA3C,EAAJ,EAAhC,CAApB,CAEA,GAAMC,SAAQ,CAAG,QAAXA,SAAW,CAACC,QAAD,CAAc,CAC3Bd,KAAK,CAACe,OAAN,CAAcD,QAAQ,CAACE,IAAvB,EACH,CAFD,CAIA,mBACI,aAAK,SAAS,CAAEpB,CAAC,CAACqB,UAAlB,wBACI,gCADJ,cAEI,KAAC,aAAD,EAAe,QAAQ,CAAEJ,QAAzB,EAFJ,cAGI,YAAK,SAAS,CAAEjB,CAAC,CAACW,KAAlB,UACKD,aADL,EAHJ,GADJ,CASH,CAjBe,CAAhB,CAoBA,cAAeF,QAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}